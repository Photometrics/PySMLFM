# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-pip:
    name: pip - ${{matrix.os}} - ${{matrix.python-version}}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu-latest, windows-latest, macos-latest]
        os: [ubuntu-latest]
        # python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        python-version: ["3.8"]

    steps:
      - uses: actions/checkout@v4
        with:
          path: xxx

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Update pip
        run: |
          cd xxx
          python -m pip install --upgrade pip

      - name: Install the package
        run: |
          cd xxx
          python -m pip install .[dev]

      - name: Test with pytest
        run: |
          cd xxx
          python -m pip install pytest
          pytest

  ensure-clean-code:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          path: xxx

      - uses: actions/setup-python@v3

      - name: Update pip
        run: |
          cd xxx
          python -m pip install --upgrade pip

      - name: Install the package
        run: |
          cd xxx
          python -m pip install .

      - name: Validate pyproject.toml
        run: |
          cd xxx
          python -m pip install validate-pyproject[all]
          python -m validate_pyproject pyproject.toml

      - name: Check the code with flake8
        run: |
          cd xxx
          python -m pip install flake8
          python -m flake8 src --count --statistics

      - name: Check the code with pylint
        run: |
          cd xxx
          python -m pip install pylint
          python -m pylint src
