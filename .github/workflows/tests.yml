name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run tests - ${{ matrix.os }} - ${{ matrix.python-version }}

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        exclude:
          - os: ubuntu-latest  # Python 3.8 is not supported since ubuntu-24.04
            python-version: '3.8'

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          #cache: 'pip'  # Caching pip dependencies

      - name: Install Tkinter for Python on Ubuntu
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        # Ignore the failure here and let other steps fail,
        # it allows 'act' to test actions locally.
        run: sudo apt-get install python3-tk -y || true

      - name: Update pip
        run: python -m pip install --upgrade pip

      - name: Install the package with dependencies
        run: python -m pip install '.[dev]'

      - name: Test with pytest
        run: |
          python -m pip install pytest
          pytest

  check:
    name: Check code quality - ${{ matrix.os }} - ${{ matrix.python-version }}

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        # Doesn't work in GitHub actions with Python 3.10+ due to Tkinter.
        # A package python3-tk must be installed via apt with newer Python.
        python-version: ['3.9']

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Update pip
        run: python -m pip install --upgrade pip

      - name: Install the package with dependencies
        run: python -m pip install '.[dev]'

      - name: Validate pyproject.toml
        run: python -m validate_pyproject pyproject.toml

      - name: Check the code with flake8
        run: python -m flake8 src tests --count --statistics

      - name: Check the code with pylint
        run: python -m pylint src
